/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = ee.FeatureCollection("users/caiohamamura/piracicaba"),
    imageVisParam = {"opacity":1,"bands":["B3N","B02","B01"],"min":36,"gamma":1};
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var k2_b13 = 1350.069147;
var k2_b14 = 1271.221673;
var k1_b13 = 866.468575;
var k1_b14 = 641.326517;

var aster = ee.ImageCollection('ASTER/AST_L1T_003')
  .filterDate('2016-12-6', '2016-12-7')
  .filterBounds(geometry)
  .select(['B01', 'B02', 'B3N','B10', 'B11', 'B12', 'B13', 'B14']);
  
var modis = ee.ImageCollection('ASTER/AST_L1T_003');


// Create a geometry representing an export region.


// Export the image, specifying scale and region.
Export.image.toDrive({
  image: aster.mosaic().clip(geometry),
  description: 'ASTER2',
  scale: 90,
});

var checkhour = function(image) {
  return image.set('hour', image.date().get('hour'));
};

var calculateRadiance = function(image) {
  var i13 = image.expression(
    '(b("B13") - 1) * gain', {
      gain: image.get("GAIN_COEFFICIENT_B13")
    }
    ).rename(['I13']);
    var i14 = image.expression(
    '(b("B14") - 1) * gain', {
      gain: image.get("GAIN_COEFFICIENT_B14")
    }
    ).rename(['I14']);
    
    return image.addBands(i13).addBands(i14);
}


var calculateTemperatureBrightness = function(image) {
   var t13 = image.expression(
    'k2 / (log((k1/b("B13")) + 1))', {
      'k2': k2_b13,
      'k1': k1_b13
}).rename('T13');
   var t14 = image.expression(
    'k2 / (log((k1/b("B14")) + 1))', {
      'k2': k2_b14,
      'k1': k1_b14
}).rename(['T14']);
   return image.addBands(t13).addBands(t14);
}

var aster2 = aster.map(checkhour);
aster2 = aster2.filter(ee.Filter.eq('hour', 13));
aster_irradiance = aster2.map(calculateRadiance);
aster_temp_brightness.map(calculateTemperatureBrightness);
Map.addLayer(aster_temp_brightness.mosaic().clip(geometry),
imageVisParam);


var calc_transmit = function(image) {
  var transm13 = image.expression("1.035378-0.097514*b()").rename(["transm13"]);
  var transm14 = image.expression("1.026468-0.135133*b()").rename(["transm14"]);
  return image.addBands(transm13).addBands(transm14);
}


var vapor = ee.ImageCollection('MODIS/006/MOD08_M3')
  .filterDate('2016-12-1', '2016-12-2')
  .filterBounds(geometry)
  .select(['Atmospheric_Water_Vapor_Mean_Mean']);
 
var aster3 = aster_temp_brightness.mosaic().clip(geometry);
var ndvi = aster3.expression("(b('B3N')-b('B02'))/(b('B3N')+b('B02'))");
var a_v = ndvi.expression('(b()-0.75)/0.65');
var a_s = ndvi.expression('(b()-0.1)/0.65');
var rv = a_v.expression("0.92762+0.07033*b()");
var rs = a_s.expression("0.99782+0.08362*b()");
var e13 = a_s.expression("b()*rs*0.967613+av*rv*0.9867", {
  "rs": rs,
  "rv": rv,
  "av": a_v
});

var e14 = a_s.expression("b()*rs*0.9779+av*rv*0.9899", {
  "rs": rs,
  "rv": rv,
  "av": a_v
});

var transmittance = vapor.map(calc_transmit);
var d13 = transmittance.mosaic().expression("(1-b('transm13'))*(1+((1-e13)*b('transm13')))",{
"e13": e13});
var d14 = transmittance.mosaic().expression("(1-b('transm14'))*(1+((1-e14)*b('transm14')))",{
"e14": e14});
var c13 = transmittance.mosaic().expression("b('transm13')*e13", {"e13": e13});
var c14 = transmittance.mosaic().expression("b('transm14')*e14", {"e14": e14});
var e0 = c13.expression('b()*d14 - d13*c14', {"d14": d14, "d13": d13, "c14": c14}); 
var e2= d13.expression("b()*(1-C14-D14)/E0",{C14: c14, D14: d14, E0: e0});
var e1= d14.expression("b()*(1-C13- D13)/E0", {C13: c13, D13: d13, E0: e0});
var l13=aster3.expression("-60.9940+0.420721*b('T13')");
var l14=aster3.expression("-63.3096+0.441977*b('T14')");
var b=e1.expression("b()*L13-E2*L14",{L13:l13, E2:e2, L14:l14});
var a=d13.expression("b()/E0", {E0:e0});
var ts=aster3.expression("b('T13')+A*(b('T13')-b('T14'))+B", {B:b, A:a})
Map.addLayer(ts);

  
//Map.addLayer(ndvi);  
//Map.addLayer(transmittance.mosaic().clip(geometry));