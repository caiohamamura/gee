/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = ee.FeatureCollection("users/caiohamamura/piracicaba"),
    imageVisParam = {"opacity":1,"bands":["B3N","B02","B01"],"min":36,"gamma":1};
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var k2_b13 = 1350.069147;
var k2_b14 = 1271.221673;
var k1_b13 = 866.468575;
var k1_b14 = 641.326517;

var aster = ee.ImageCollection('ASTER/AST_L1T_003')
  .filterDate('2016-12-6', '2016-12-7')
  .filterBounds(geometry)
  .select(['B01', 'B02', 'B3N','B10', 'B11', 'B12', 'B13', 'B14']);
  
var modis = ee.ImageCollection('ASTER/AST_L1T_003');


// Create a geometry representing an export region.


// Export the image, specifying scale and region.
Export.image.toDrive({
  image: aster.mosaic().clip(geometry),
  description: 'ASTER2',
  scale: 90,
});

var checkhour = function(image) {
  return image.set('hour', image.date().get('hour'));
};

var calculateTemperatureBrightness = function(image) {
   var t13 = image.expression(
    'k2 / (log(k1/b("B13") + 1))', {
      'k2': k2_b13,
      'k1': k1_b13
}).rename('T13');
   var t14 = image.expression(
    'k2 / (log(k1/b("B14") + 1))', {
      'k2': k2_b14,
      'k1': k1_b14
}).rename(['T14']);
   return image.addBands(t13).addBands(t14);
}

var aster2 = aster.map(checkhour);
aster2 = aster2.filter(ee.Filter.eq('hour', 13));

Map.addLayer(aster2.map(calculateTemperatureBrightness).mosaic().clip(geometry),
imageVisParam);


var calc_transmit = function(image) {
  var transm13 = image.expression("1.035378-0.097514*b()").rename(["transm13"]);
  var transm14 = image.expression("1.026468-0.135133*b()").rename(["transm14"]);
  return image.addBands(transm13).addBands(transm14);
}


var vapor = ee.ImageCollection('MODIS/006/MOD08_M3')
  .filterDate('2016-12-1', '2016-12-2')
  .filterBounds(geometry)
  .select(['Atmospheric_Water_Vapor_Mean_Mean']);
 
var aster3 = aster2.mosaic().clip(geometry);
var ndvi = aster3.expression("(b('B3N')-b('B02'))/(b('B3N')+b('B02'))");
var a_v = ndvi.expression('(b()-0.75)/0.65');
var a_s = ndvi.expression('(b()-0.1)/0.65');
var rv = a_v.expression("0.92762+0.07033*b()");
var rs = a_s.expression("0.99782+0.08362*b()");
var e13 = a_s.expression("b()*rs*0.967613+av*rv*0.9867", {
  "rs": rs,
  "rv": rv,
  "av": a_v
});

var e14 = a_s.expression("b()*rs*0.9779+av*rv*0.9899", {
  "rs": rs,
  "rv": rv,
  "av": a_v
});


var transmittance = vapor.map(calc_transmit);
  
Map.addLayer(ndvi);  
Map.addLayer(transmittance.mosaic().clip(geometry));